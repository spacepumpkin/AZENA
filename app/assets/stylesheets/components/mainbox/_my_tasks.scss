#my-tasks {
  margin-left : -$main-content-padding + 10px;
  margin-right: -$main-content-padding + 10px;
}

table {
  width          : 100%;
  border-collapse: collapse;
  table-layout   : fixed; // fixes any overlap of the next table cell over the current
  // border: 1px solid $light-gray;
}

td,
th {
  // padding      : 6px;
  overflow     : hidden;
  white-space  : nowrap;
  text-overflow: ellipsis;
  width        : 1px;
}

td {
  opacity         : 75%;
  border-top      : 1px solid $light-gray;
  border-bottom   : 1px solid $light-gray;
  white-space     : nowrap;
  // width        : 1px;
}

th {
  // background-color: $lightest-gray;
  color        : $primary;
  font-weight  : bold;
  font-size    : 16px;
  text-align   : center;
  height       : 30px;
  padding-top  : 20px;
  border-top   : none;
  border-bottom: 4px solid $light-gray;
}

// ROW & FIRST CELL STYLING

.my-tasks-table-row {
  opacity        : 75%;
  transition     : all 0.3s ease 0s;
  border-left    : 4px solid transparent;
  box-sizing     : border-box;
  height         : 50px;
  // padding-left: 10px;

  &:hover,
  &:focus-within {
    background-color: $lighter-gray;
    border-left     : 4px solid $primary;
    opacity         : 100%;
  }

  &:hover .plus-button {
    opacity: 100%;
    // filter : invert(80%) sepia(0%) saturate(11%) hue-rotate(162deg) brightness(89%) contrast(77%);
  }

  >div {
    margin: 5px auto;
  }
}

.my-tasks-table-row>td:first-child {
  // margin-bottom: -1px; // get rid of extra flex borders
  // min-width: 270px;
  width            : 100%;
  // vertical-align: middle; // centers first column, but other colunn cells get shifted
}

.my-tasks-table-row:first-child>td:first-child {
  // margin-top: -1px; // get rid of extra flex border in first cell
}

.my-tasks-first-cell {
  position             : relative;
  // width             : 100%;
  vertical-align       : middle;
  display              : flex;
  // justify-content: ;
  padding-top          : 5px;
  align-items          : center;
  // border-bottom: none;
  margin-left          : 10px;
  margin-right         : 10px;

  >.plus-button {
    // float: right;
    height     : 18px;
    width      : 18px;
    margin-left: 5px;
    opacity    : 0%;
  }

  // &:hover>.plus-button {
  //   opacity: 100%;
  // }

  // &::after {
  //   content: "";
  //   clear  : both;
  //   display: table;
  // }
}

// CHECKBOX
.task-check-wrapper {
  // float     : left;
  // display: inline-block;
  position     : relative;
  box-sizing   : border-box;
  width        : 24px;
  height       : 24px;
  // flex      : 0 0 auto; // To stop flex auto-sizing
}

.task-check-icon {
  @include task-check-button;
  width : 20px;
  height: 20px;
}

// TASK NAME

.task-input {
  color           : black;
  border          : 1px solid transparent;
  padding         : 2px 6px;
  margin-left     : 5px;
  border-radius   : 5px;
  font-weight     : bold;
  font-size       : larger;
  width           : 90%;
  opacity         : 90%;
  position        : relative;
  text-overflow   : ellipsis;
  // transition   : all 0.3s ease 0s;

  &:hover {
    border          : 1px solid $light-gray;
    background-color: $lightest-gray;
    opacity         : 100%;
  }

  &:focus {
    border             : 1px solid $primary;
    box-shadow         : inset 0 2px 4px $lighter-gray, 0 2px 4px $lighter-gray;
    // color           : $primary;
    background-color   : white;
    opacity            : 100%;

    +.plus-button {
      opacity: 100%;
      filter : sepia(20%);
    }
  }

  &.task-done {
    position                 : relative;
    animation                : flashPrimary 1s ease;
    text-decoration          : line-through $secondary;
    text-decoration-thickness: 3px;
  }
}

// TASK DUE DATE
.my-tasks-date-cell {
  display        : flex;
  justify-content: center;
  align-items    : center;
}

.my-tasks-date {
  border       : 1px solid $light-gray;
  border-radius: 5px;
  padding      : 4px 6px;
  margin       : 0 auto;
  cursor       : text;

  // mwidth: 90%;

  // margin       : 0;
  // position     : absolute;
  // top          : 50%;
  // left         : 50%;
  // -ms-transform: translate(-50%, -50%);
  // transform    : translate(-50%, -50%);

  &:focus {
    border          : 1px solid $primary;
    background-color: white;
  }
}


// CREATE TASK ROW
.my-tasks-create-row {
  transition    : all 0.3s ease 0s;
  border-left   : 4px solid transparent;
  box-sizing    : border-box;
  // height     : 50px;
  height        : 60px;

  >td {
    width: 1px;
  }

  input {
    // width: 90%;
  }

  select {
    padding              : 4px;
    border-radius        : 5px;
    border               : 1px solid $light-gray;
    box-shadow           : none;
    // -webkit-appearance: none;
    // -moz-appearance   : none;
    // appearance        : none;
    outline              : none;

    &:focus {
      // outline   : 1px solid $primary;
      border       : 1px solid $primary;
      // box-shadow: 0 0 0 1px $primary;
    }
  }
}


// Unable to change default browser option styling
// select option {
//   background-color: $primary !important;
//   color           : $secondary !important;
//   box-shadow      : inset 20px 20px $primary !important;

//   &:hover,
//   &:checked,
//   &:focus,
//   &:active {
//     background-color: $primary !important;
//     color           : $secondary !important;
//     box-shadow      : inset 0 0 20px 20px $primary !important;

//     &:after {
//       content   : attr(title);
//       background: #666;
//       color     : #fff;
//       position  : absolute;
//       width     : 100%;
//       left      : 0;
//       border    : none;
//     }
//   }
// }

// select:focus > option:checked {
//   background-color: $primary !important;
// }

.add-task-button {
  @include submit-button;

  &:disabled {
    cursor: default;
  }

  &:enabled {
    opacity: 70%;
  }

  // max-height: 30px;
}

// input[value=""]::-webkit-datetime-edit {
//   color: transparent;
// }

.date-past-due {
  font-weight: bold;
  color      : red;
}

.date-today-tomorrow {
  color: $primary;
}

.date-empty {
  color     : transparent;
  transition: color 0.3s ease 0s;

  &:hover,
  &:focus {
    color: inherit;
  }
}